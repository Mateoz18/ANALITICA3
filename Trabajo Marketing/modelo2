{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP2SolnfQSHMiGsDiMImnIT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"FG2mtrVnrUM2","executionInfo":{"status":"ok","timestamp":1746531701495,"user_tz":300,"elapsed":2480,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import sqlite3 as sql\n","import plotly.graph_objs as go ### para gráficos\n","import plotly.express as px\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import MinMaxScaler\n","from ipywidgets import interact ## para análisis interactivo\n","from sklearn import neighbors ### basado en contenido un solo producto consumido\n","import joblib\n","from sklearn.neighbors import NearestNeighbors"]},{"cell_type":"code","source":["# Conexion con Drive\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XZfhDGSZri2d","executionInfo":{"status":"ok","timestamp":1746531718190,"user_tz":300,"elapsed":16692,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"70842637-2855-48f9-d58e-2601885466ab"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Cambio de directorio de Trabajo\n","import os\n","import sys\n","path = '/content/drive/MyDrive/Mod2/ANALITICA3'\n","os.chdir(path)\n","sys.path.append(path)"],"metadata":{"id":"c8U7CwFyroki","executionInfo":{"status":"ok","timestamp":1746531719306,"user_tz":300,"elapsed":1112,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["import sqlite3 as sql\n","import pandas as pd\n","import numpy as np\n","\n","conn=sql.connect('/content/drive/MyDrive/Mod2/ANALITICA3/data/db_movies')\n","cur=conn.cursor() ###para funciones que ejecutan sql en base de datos"],"metadata":{"id":"pVtf-rq2rr9E","executionInfo":{"status":"ok","timestamp":1746531720185,"user_tz":300,"elapsed":881,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["### para verificar las tablas que hay disponibles\n","cur.execute(\"SELECT name FROM sqlite_master where type='table' \")\n","cur.fetchall()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fLPzH0Ymrufo","executionInfo":{"status":"ok","timestamp":1746531720198,"user_tz":300,"elapsed":9,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"903877c7-d640-426c-9516-e16f772f4a29"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('ratings',),\n"," ('movies',),\n"," ('usuarios_sel',),\n"," ('peliculas_sel',),\n"," ('ratings_final',),\n"," ('movies_final',),\n"," ('full_ratings',),\n"," ('movie_genres',),\n"," ('df_genres',)]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Cargas la tabla que ya contiene los datos procesados\n","tabla_completa = pd.read_sql_query(\"SELECT * FROM full_ratings\", conn)\n","\n","tabla_completa"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"xbHX3njorway","executionInfo":{"status":"ok","timestamp":1746531720533,"user_tz":300,"elapsed":333,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"a350f755-8aaf-4b63-a647-d6764d4bf85e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       user_id  movie_id                                       movie_title  \\\n","0            1         1                                         Toy Story   \n","1            1         3                                  Grumpier Old Men   \n","2            1         6                                              Heat   \n","3            1        47                              Seven (a.k.a. Se7en)   \n","4            1        50                               Usual Suspects, The   \n","...        ...       ...                                               ...   \n","25973      607      3785                                       Scary Movie   \n","25974      607      3793                                             X-Men   \n","25975      607      3994                                       Unbreakable   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25977      607      4022                                         Cast Away   \n","\n","                                      movie_genres  movie_rating  \\\n","0      Adventure|Animation|Children|Comedy|Fantasy           4.0   \n","1                                   Comedy|Romance           4.0   \n","2                            Action|Crime|Thriller           4.0   \n","3                                 Mystery|Thriller           5.0   \n","4                           Crime|Mystery|Thriller           5.0   \n","...                                            ...           ...   \n","25973                                Comedy|Horror           2.0   \n","25974                      Action|Adventure|Sci-Fi           3.0   \n","25975                                 Drama|Sci-Fi           3.0   \n","25976                         Action|Drama|Romance           2.0   \n","25977                                        Drama           4.0   \n","\n","       movie_timestamp  movie_year  \n","0            964982703        1995  \n","1            964981247        1995  \n","2            964982224        1995  \n","3            964983815        1995  \n","4            964982931        1995  \n","...                ...         ...  \n","25973        964743188        2000  \n","25974        964743155        2000  \n","25975        997847202        2000  \n","25976        997847173        2000  \n","25977        997847173        2000  \n","\n","[25978 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-e0a89b4e-3847-4820-b5a9-d1e46275e7df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>movie_title</th>\n","      <th>movie_genres</th>\n","      <th>movie_rating</th>\n","      <th>movie_timestamp</th>\n","      <th>movie_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Grumpier Old Men</td>\n","      <td>Comedy|Romance</td>\n","      <td>4.0</td>\n","      <td>964981247</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>Heat</td>\n","      <td>Action|Crime|Thriller</td>\n","      <td>4.0</td>\n","      <td>964982224</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>Seven (a.k.a. Se7en)</td>\n","      <td>Mystery|Thriller</td>\n","      <td>5.0</td>\n","      <td>964983815</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>Usual Suspects, The</td>\n","      <td>Crime|Mystery|Thriller</td>\n","      <td>5.0</td>\n","      <td>964982931</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>25973</th>\n","      <td>607</td>\n","      <td>3785</td>\n","      <td>Scary Movie</td>\n","      <td>Comedy|Horror</td>\n","      <td>2.0</td>\n","      <td>964743188</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25974</th>\n","      <td>607</td>\n","      <td>3793</td>\n","      <td>X-Men</td>\n","      <td>Action|Adventure|Sci-Fi</td>\n","      <td>3.0</td>\n","      <td>964743155</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25975</th>\n","      <td>607</td>\n","      <td>3994</td>\n","      <td>Unbreakable</td>\n","      <td>Drama|Sci-Fi</td>\n","      <td>3.0</td>\n","      <td>997847202</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25976</th>\n","      <td>607</td>\n","      <td>3996</td>\n","      <td>Crouching Tiger, Hidden Dragon (Wo hu cang long)</td>\n","      <td>Action|Drama|Romance</td>\n","      <td>2.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25977</th>\n","      <td>607</td>\n","      <td>4022</td>\n","      <td>Cast Away</td>\n","      <td>Drama</td>\n","      <td>4.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25978 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0a89b4e-3847-4820-b5a9-d1e46275e7df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e0a89b4e-3847-4820-b5a9-d1e46275e7df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e0a89b4e-3847-4820-b5a9-d1e46275e7df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8885b992-db2a-4a0e-8e5a-f732541a00e7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8885b992-db2a-4a0e-8e5a-f732541a00e7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8885b992-db2a-4a0e-8e5a-f732541a00e7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_672504e2-832b-4fce-af23-d791e4212f36\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tabla_completa')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_672504e2-832b-4fce-af23-d791e4212f36 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tabla_completa');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tabla_completa","summary":"{\n  \"name\": \"tabla_completa\",\n  \"rows\": 25978,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175,\n        \"min\": 1,\n        \"max\": 607,\n        \"num_unique_values\": 335,\n        \"samples\": [\n          43,\n          198,\n          131\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20389,\n        \"min\": 1,\n        \"max\": 122904,\n        \"num_unique_values\": 450,\n        \"samples\": [\n          788,\n          34405,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 450,\n        \"samples\": [\n          \"Nutty Professor, The\",\n          \"Serenity\",\n          \"Get Shorty\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 204,\n        \"samples\": [\n          \"Action|Comedy|Crime|Fantasy\",\n          \"Adventure|Comedy\",\n          \"Comedy|Drama|Sci-Fi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0028546191397882,\n        \"min\": 0.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.5,\n          5.0,\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 225427706,\n        \"min\": 828124615,\n        \"max\": 1537470521,\n        \"num_unique_values\": 22209,\n        \"samples\": [\n          842613794,\n          1461869715,\n          1316197146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 1937,\n        \"max\": 2016,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          2013,\n          1973,\n          1995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["tabla_titulos = pd.read_sql_query('''\n","SELECT\n","movie_title,\n","movie_genres,\n","movie_rating,\n","COUNT(*) AS num_ratings,\n","ROUND(AVG(num_ratings),2) AS avg_ratings\n","\n","FROM full_ratings\n","GROUP BY movie_title\n","HAVING num_ratings BETWEEN 50 AND 500\n","''', conn)\n","\n","tabla_titulos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"zit2nlxWcmNq","executionInfo":{"status":"error","timestamp":1746532632045,"user_tz":300,"elapsed":27,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"9a312508-56d8-4386-d11d-d7c4535614ba"},"execution_count":31,"outputs":[{"output_type":"error","ename":"DatabaseError","evalue":"Execution failed on sql '\nSELECT \nmovie_title,\nmovie_genres,\nmovie_rating,\nCOUNT(*) AS num_ratings,\nROUND(AVG(num_ratings),2) AS avg_ratings\n\nFROM full_ratings\nGROUP BY movie_title\nHAVING num_ratings BETWEEN 50 AND 500\n': no such column: num_ratings","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOperationalError\u001b[0m                          Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, sql, params)\u001b[0m\n\u001b[1;32m   2673\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2674\u001b[0;31m             \u001b[0mcur\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2675\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mcur\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mOperationalError\u001b[0m: no such column: num_ratings","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mDatabaseError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-31-04ff2195e575>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m tabla_titulos = pd.read_sql_query('''\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mSELECT\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmovie_title\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmovie_genres\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmovie_rating\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_sql_query\u001b[0;34m(sql, con, index_col, coerce_float, params, parse_dates, chunksize, dtype, dtype_backend)\u001b[0m\n\u001b[1;32m    524\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    525\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mpandasSQL_builder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcon\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpandas_sql\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 526\u001b[0;31m         return pandas_sql.read_query(\n\u001b[0m\u001b[1;32m    527\u001b[0m             \u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    528\u001b[0m             \u001b[0mindex_col\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex_col\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_query\u001b[0;34m(self, sql, index_col, coerce_float, parse_dates, params, chunksize, dtype, dtype_backend)\u001b[0m\n\u001b[1;32m   2736\u001b[0m         \u001b[0mdtype_backend\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mDtypeBackend\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0mLiteral\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2737\u001b[0m     ) -> DataFrame | Iterator[DataFrame]:\n\u001b[0;32m-> 2738\u001b[0;31m         \u001b[0mcursor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2739\u001b[0m         \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mcol_desc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol_desc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdescription\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2740\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, sql, params)\u001b[0m\n\u001b[1;32m   2684\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2685\u001b[0m             \u001b[0mex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDatabaseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Execution failed on sql '{sql}': {exc}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2686\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mex\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mexc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2688\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mDatabaseError\u001b[0m: Execution failed on sql '\nSELECT \nmovie_title,\nmovie_genres,\nmovie_rating,\nCOUNT(*) AS num_ratings,\nROUND(AVG(num_ratings),2) AS avg_ratings\n\nFROM full_ratings\nGROUP BY movie_title\nHAVING num_ratings BETWEEN 50 AND 500\n': no such column: num_ratings"]}]},{"cell_type":"code","source":["# Separar los géneros por el carácter '|' y expandirlos en múltiples filas, se hace de esta manera ya que sqlite no tiene esa funcion\n","df_genres = tabla_completa.assign(movie_genres=tabla_completa['movie_genres'].str.split('|')).explode('movie_genres')\n","\n","# Renombrar para claridad\n","df_genres = df_genres.rename(columns={'movie_genres': 'genre'})\n","\n","print(df_genres)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j8NcW4ohze5n","executionInfo":{"status":"ok","timestamp":1746531720662,"user_tz":300,"elapsed":127,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"344adf79-33ab-490f-d87b-42cefbaa8d38"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["       user_id  movie_id                                       movie_title  \\\n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","...        ...       ...                                               ...   \n","25975      607      3994                                       Unbreakable   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25977      607      4022                                         Cast Away   \n","\n","           genre  movie_rating  movie_timestamp  movie_year  \n","0      Adventure           4.0        964982703        1995  \n","0      Animation           4.0        964982703        1995  \n","0       Children           4.0        964982703        1995  \n","0         Comedy           4.0        964982703        1995  \n","0        Fantasy           4.0        964982703        1995  \n","...          ...           ...              ...         ...  \n","25975     Sci-Fi           3.0        997847202        2000  \n","25976     Action           2.0        997847173        2000  \n","25976      Drama           2.0        997847173        2000  \n","25976    Romance           2.0        997847173        2000  \n","25977      Drama           4.0        997847173        2000  \n","\n","[77451 rows x 7 columns]\n"]}]},{"cell_type":"code","source":["#Crear nueva tabla en la base de datos\n","df_genres = df_genres.to_sql(\"df_genres\", conn, if_exists='replace', index=False)"],"metadata":{"id":"FWSPRe_IVjmU","executionInfo":{"status":"ok","timestamp":1746531721399,"user_tz":300,"elapsed":735,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["#verificar la nueva tabla\n","df_genres = pd.read_sql(\"SELECT * FROM df_genres\", conn)"],"metadata":{"id":"kQMgfPg8aaQb","executionInfo":{"status":"ok","timestamp":1746532113941,"user_tz":300,"elapsed":291,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["tabla_generos = pd.read_sql_query('''\n","SELECT\n","movie_title,\n","genre,\n","movie_rating,\n","COUNT(*) AS num_ratings\n","\n","FROM df_genres\n","GROUP BY movie_title\n","HAVING num_ratings BETWEEN 50 AND 500\n","''', conn)\n","tabla_generos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"g0b5f64aW2v6","executionInfo":{"status":"ok","timestamp":1746532177983,"user_tz":300,"elapsed":218,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"12b29518-cdf3-488c-913e-2eb618f096ce"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    movie_title      genre  movie_rating  num_ratings\n","0    10 Things I Hate About You     Comedy           5.0           54\n","1         2001: A Space Odyssey  Adventure           4.0          207\n","2                 28 Days Later     Action           3.5           96\n","3                           300     Action           3.0          188\n","4       40-Year-Old Virgin, The     Comedy           4.0           92\n","..                          ...        ...           ...          ...\n","398       X-Men: The Last Stand     Action           4.0           81\n","399            X2: X-Men United     Action           4.0          176\n","400             You've Got Mail     Comedy           4.0           50\n","401          Young Frankenstein     Comedy           5.0           76\n","402                  Zombieland     Action           4.5           81\n","\n","[403 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-704374ad-6dc0-4c4e-80f3-604011c9e216\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_title</th>\n","      <th>genre</th>\n","      <th>movie_rating</th>\n","      <th>num_ratings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10 Things I Hate About You</td>\n","      <td>Comedy</td>\n","      <td>5.0</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2001: A Space Odyssey</td>\n","      <td>Adventure</td>\n","      <td>4.0</td>\n","      <td>207</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28 Days Later</td>\n","      <td>Action</td>\n","      <td>3.5</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>300</td>\n","      <td>Action</td>\n","      <td>3.0</td>\n","      <td>188</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>40-Year-Old Virgin, The</td>\n","      <td>Comedy</td>\n","      <td>4.0</td>\n","      <td>92</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>X-Men: The Last Stand</td>\n","      <td>Action</td>\n","      <td>4.0</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>X2: X-Men United</td>\n","      <td>Action</td>\n","      <td>4.0</td>\n","      <td>176</td>\n","    </tr>\n","    <tr>\n","      <th>400</th>\n","      <td>You've Got Mail</td>\n","      <td>Comedy</td>\n","      <td>4.0</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>401</th>\n","      <td>Young Frankenstein</td>\n","      <td>Comedy</td>\n","      <td>5.0</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>402</th>\n","      <td>Zombieland</td>\n","      <td>Action</td>\n","      <td>4.5</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>403 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-704374ad-6dc0-4c4e-80f3-604011c9e216')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-704374ad-6dc0-4c4e-80f3-604011c9e216 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-704374ad-6dc0-4c4e-80f3-604011c9e216');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2dd9abd7-4805-490e-b937-6b9af7026823\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2dd9abd7-4805-490e-b937-6b9af7026823')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2dd9abd7-4805-490e-b937-6b9af7026823 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_b2e90d6c-1f19-4c71-9831-9bb3f17c9a0e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tabla_generos')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b2e90d6c-1f19-4c71-9831-9bb3f17c9a0e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tabla_generos');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tabla_generos","summary":"{\n  \"name\": \"tabla_generos\",\n  \"rows\": 403,\n  \"fields\": [\n    {\n      \"column\": \"movie_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 403,\n        \"samples\": [\n          \"Casper\",\n          \"Platoon\",\n          \"Pocahontas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Sci-Fi\",\n          \"Mystery\",\n          \"Comedy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1329432842883713,\n        \"min\": 0.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2.5,\n          4.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 50,\n        \"max\": 488,\n        \"num_unique_values\": 165,\n        \"samples\": [\n          264,\n          106,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df_genres['movie_title'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"F0IhC914a_xx","executionInfo":{"status":"ok","timestamp":1746532127259,"user_tz":300,"elapsed":13,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"205c0cd1-e3e0-4466-bc89-ff1efaff5aab"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_title\n","Forrest Gump                             868\n","Pulp Fiction                             812\n","Shrek                                    726\n","Lion King, The                           714\n","Toy Story                                685\n","                                        ... \n","Zoolander                                 30\n","My Cousin Vinny                           29\n","Anchorman: The Legend of Ron Burgundy     29\n","Tommy Boy                                 27\n","Caddyshack                                25\n","Name: count, Length: 450, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>movie_title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Forrest Gump</th>\n","      <td>868</td>\n","    </tr>\n","    <tr>\n","      <th>Pulp Fiction</th>\n","      <td>812</td>\n","    </tr>\n","    <tr>\n","      <th>Shrek</th>\n","      <td>726</td>\n","    </tr>\n","    <tr>\n","      <th>Lion King, The</th>\n","      <td>714</td>\n","    </tr>\n","    <tr>\n","      <th>Toy Story</th>\n","      <td>685</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zoolander</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>My Cousin Vinny</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Anchorman: The Legend of Ron Burgundy</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Tommy Boy</th>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>Caddyshack</th>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>450 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["tabla_generos['num_ratings'].info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wfY-CGHvam6b","executionInfo":{"status":"ok","timestamp":1746532241983,"user_tz":300,"elapsed":6,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"a29295f0-5396-42cc-c650-48c5eaeb951b"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.series.Series'>\n","RangeIndex: 403 entries, 0 to 402\n","Series name: num_ratings\n","Non-Null Count  Dtype\n","--------------  -----\n","403 non-null    int64\n","dtypes: int64(1)\n","memory usage: 3.3 KB\n"]}]},{"cell_type":"code","source":["df_generos = pd.read_sql('''\n","CREATE TABLE movie_genres AS\n","SELECT movie_title, genres,\n","COUNT(*) AS num_ratings,\n","AVG(movie_rating) AS avg_rating\n","\n","FROM full_ratings\n","GROUP BY movie_title. genres''', conn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"23ybSOB9sGxW","executionInfo":{"status":"error","timestamp":1746481642108,"user_tz":300,"elapsed":22,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"05acfb39-fd26-47c1-fd3f-835706993c6a"},"execution_count":38,"outputs":[{"output_type":"error","ename":"DatabaseError","evalue":"Execution failed on sql '\nCREATE TABLE movie_genres AS\nSELECT movie_title, genres,\nCOUNT(*) AS num_ratings,\nAVG(movie_rating) AS avg_rating\n\nFROM full_ratings\nGROUP BY movie_title. genres': table movie_genres already exists","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOperationalError\u001b[0m                          Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, sql, params)\u001b[0m\n\u001b[1;32m   2673\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2674\u001b[0;31m             \u001b[0mcur\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2675\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mcur\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mOperationalError\u001b[0m: table movie_genres already exists","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mDatabaseError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-38-5ac55b3f028b>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m df_generos = pd.read_sql('''\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mCREATE\u001b[0m \u001b[0mTABLE\u001b[0m \u001b[0mmovie_genres\u001b[0m \u001b[0mAS\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mSELECT\u001b[0m \u001b[0mmovie_title\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgenres\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mCOUNT\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0mAS\u001b[0m \u001b[0mnum_ratings\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mAVG\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmovie_rating\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0mAS\u001b[0m \u001b[0mavg_rating\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_sql\u001b[0;34m(sql, con, index_col, coerce_float, params, parse_dates, columns, chunksize, dtype_backend, dtype)\u001b[0m\n\u001b[1;32m    704\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mpandasSQL_builder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcon\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpandas_sql\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    705\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpandas_sql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSQLiteDatabase\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 706\u001b[0;31m             return pandas_sql.read_query(\n\u001b[0m\u001b[1;32m    707\u001b[0m                 \u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    708\u001b[0m                 \u001b[0mindex_col\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex_col\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_query\u001b[0;34m(self, sql, index_col, coerce_float, parse_dates, params, chunksize, dtype, dtype_backend)\u001b[0m\n\u001b[1;32m   2736\u001b[0m         \u001b[0mdtype_backend\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mDtypeBackend\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0mLiteral\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2737\u001b[0m     ) -> DataFrame | Iterator[DataFrame]:\n\u001b[0;32m-> 2738\u001b[0;31m         \u001b[0mcursor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2739\u001b[0m         \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mcol_desc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol_desc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdescription\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2740\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, sql, params)\u001b[0m\n\u001b[1;32m   2684\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2685\u001b[0m             \u001b[0mex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDatabaseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Execution failed on sql '{sql}': {exc}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2686\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mex\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mexc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2688\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mDatabaseError\u001b[0m: Execution failed on sql '\nCREATE TABLE movie_genres AS\nSELECT movie_title, genres,\nCOUNT(*) AS num_ratings,\nAVG(movie_rating) AS avg_rating\n\nFROM full_ratings\nGROUP BY movie_title. genres': table movie_genres already exists"]}]},{"cell_type":"code","source":["df_genres"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"collapsed":true,"id":"fx7oi0wgrwyO","executionInfo":{"status":"ok","timestamp":1746477774587,"user_tz":300,"elapsed":137,"user":{"displayName":"KEVIN ANDRES CARMONA MENESES","userId":"02642002547058421143"}},"outputId":"e0560ec3-9ae3-4598-dbd0-727f82e62ee6"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       user_id  movie_id                                       movie_title  \\\n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","0            1         1                                         Toy Story   \n","...        ...       ...                                               ...   \n","25975      607      3994                                       Unbreakable   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25976      607      3996  Crouching Tiger, Hidden Dragon (Wo hu cang long)   \n","25977      607      4022                                         Cast Away   \n","\n","           genre  movie_rating  movie_timestamp  movie_year  \n","0      Adventure           4.0        964982703        1995  \n","0      Animation           4.0        964982703        1995  \n","0       Children           4.0        964982703        1995  \n","0         Comedy           4.0        964982703        1995  \n","0        Fantasy           4.0        964982703        1995  \n","...          ...           ...              ...         ...  \n","25975     Sci-Fi           3.0        997847202        2000  \n","25976     Action           2.0        997847173        2000  \n","25976      Drama           2.0        997847173        2000  \n","25976    Romance           2.0        997847173        2000  \n","25977      Drama           4.0        997847173        2000  \n","\n","[77451 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-30c7cc02-a284-4813-910b-b92a3e482743\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>movie_title</th>\n","      <th>genre</th>\n","      <th>movie_rating</th>\n","      <th>movie_timestamp</th>\n","      <th>movie_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Adventure</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Animation</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Children</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Comedy</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Toy Story</td>\n","      <td>Fantasy</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","      <td>1995</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>25975</th>\n","      <td>607</td>\n","      <td>3994</td>\n","      <td>Unbreakable</td>\n","      <td>Sci-Fi</td>\n","      <td>3.0</td>\n","      <td>997847202</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25976</th>\n","      <td>607</td>\n","      <td>3996</td>\n","      <td>Crouching Tiger, Hidden Dragon (Wo hu cang long)</td>\n","      <td>Action</td>\n","      <td>2.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25976</th>\n","      <td>607</td>\n","      <td>3996</td>\n","      <td>Crouching Tiger, Hidden Dragon (Wo hu cang long)</td>\n","      <td>Drama</td>\n","      <td>2.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25976</th>\n","      <td>607</td>\n","      <td>3996</td>\n","      <td>Crouching Tiger, Hidden Dragon (Wo hu cang long)</td>\n","      <td>Romance</td>\n","      <td>2.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>25977</th>\n","      <td>607</td>\n","      <td>4022</td>\n","      <td>Cast Away</td>\n","      <td>Drama</td>\n","      <td>4.0</td>\n","      <td>997847173</td>\n","      <td>2000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>77451 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30c7cc02-a284-4813-910b-b92a3e482743')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30c7cc02-a284-4813-910b-b92a3e482743 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30c7cc02-a284-4813-910b-b92a3e482743');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-16b8319a-3284-4b83-87ce-867b44ef59f6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-16b8319a-3284-4b83-87ce-867b44ef59f6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-16b8319a-3284-4b83-87ce-867b44ef59f6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_66de69d3-91f2-4892-ad46-dbf6d29684f4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_genres')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_66de69d3-91f2-4892-ad46-dbf6d29684f4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_genres');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_genres","summary":"{\n  \"name\": \"df_genres\",\n  \"rows\": 77451,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175,\n        \"min\": 1,\n        \"max\": 607,\n        \"num_unique_values\": 335,\n        \"samples\": [\n          43,\n          198,\n          131\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22045,\n        \"min\": 1,\n        \"max\": 122904,\n        \"num_unique_values\": 450,\n        \"samples\": [\n          788,\n          34405,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 450,\n        \"samples\": [\n          \"Nutty Professor, The\",\n          \"Serenity\",\n          \"Get Shorty\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Adventure\",\n          \"Romance\",\n          \"Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0017622715691374,\n        \"min\": 0.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.5,\n          5.0,\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226292426,\n        \"min\": 828124615,\n        \"max\": 1537470521,\n        \"num_unique_values\": 22209,\n        \"samples\": [\n          842613794,\n          1461869715,\n          1316197146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 1937,\n        \"max\": 2016,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          2013,\n          1973,\n          1995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]}]}